# Terraform Provider release workflow for Terraform Registry
name: Release

# This GitHub action creates a release when a tag that matches the pattern
# "v*" (e.g. v0.1.0) is created. The release is automatically published to
# the Terraform Registry after the initial provider registration.
on:
  push:
    tags:
      - 'v*'

# Releases need permissions to read and write the repository contents.
# GitHub considers creating releases and uploading assets as writing contents.
permissions:
  contents: write
  id-token: write

jobs:
  goreleaser:
    runs-on:
      group: prod

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          # Allow goreleaser to access older tag information.
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Fetch GPG keys from Vault
        uses: QumulusTechnology/vault-setup-action@v2
        with:
          aws_account_data: ${{ secrets.AWS_ACCOUNT_DATA }}
          vault_addr: ${{ secrets.VAULT_ADDR }}
          platform: qcp
          secrets: |
            secret/data/qcp/global/automation-user-gpg-key private-key | GPG_PRIVATE_KEY;
            secret/data/qcp/global/automation-user-gpg-key public-key | GPG_PUBLIC_KEY;

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@e89d40939c28e39f97cf32126055eeae86ba74ec # v6.3.0
        id: import_gpg
        with:
          gpg_private_key: ${{ env.GPG_PRIVATE_KEY }}
          passphrase: ''

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a # v6.4.0
        with:
          version: latest
          args: release --clean
        env:
          # GitHub sets the GITHUB_TOKEN secret automatically.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}

      - name: Upload release artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: release-artifacts
          path: dist/
